{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\rohit\\\\OneDrive\\\\Desktop\\\\Sparkmate\\\\client\\\\src\\\\components\\\\AuthModal.js\",\n  _s = $RefreshSig$();\nimport { useState } from 'react';\nimport axios from 'axios';\nimport { useNavigate } from 'react-router-dom';\nimport { useCookies } from 'react-cookie';\nimport playstoreicon from '../images/playstore-icon.png';\nimport appleicon from '../images/apple-icon.png';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst AuthModal = ({\n  setShowModal,\n  isSignUp\n}) => {\n  _s();\n  const [email, setEmail] = useState(null);\n  const [password, setPassword] = useState(null);\n  const [confirmPassword, setConfirmPassword] = useState(null);\n  const [error, setError] = useState(null);\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n  let navigate = useNavigate();\n  const handleClick = () => {\n    setShowModal(false);\n  };\n  const handleSubmit = async e => {\n    e.preventDefault();\n    try {\n      if (isSignUp && password !== confirmPassword) {\n        setError('Passwords need to match!');\n        return;\n      }\n      if (isSignUp && password.length < 8) {\n        setError(\"Invalid password. Password must contain at least 8 characters, including one letter, one number, and one special character.\");\n        return;\n      }\n      if (!/[a-zA-Z]/.test(password) || !/\\d/.test(password) || !/[!@#$%^&*()_+]/.test(password)) {\n        setError(\"Invalid password. Password must contain at least 8 characters, including one letter, one number, and one special character.\");\n        return;\n      }\n      const response = await axios.post(`http://localhost:8000/${isSignUp ? 'signup' : 'login'}`, {\n        email,\n        password\n      });\n      setCookie('AuthToken', response.data.token);\n      setCookie('UserId', response.data.userId);\n      const success = response.status === 201;\n      if (success && isSignUp) navigate('/onboarding');\n      if (success && !isSignUp) navigate('/dashboard');\n      window.location.reload();\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"auth-modal\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"close-icon\",\n      onClick: handleClick,\n      children: \"\\u24E7\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: isSignUp ? 'CREATE ACCOUNT' : 'LOG IN'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"By clicking Log In, you agree to our terms and conditions.\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"email\",\n        id: \"email\",\n        name: \"email\",\n        placeholder: \"email\",\n        required: true,\n        onChange: e => setEmail(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password\",\n        name: \"password\",\n        placeholder: \"password\",\n        required: true,\n        onChange: e => setPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 17\n      }, this), isSignUp && /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"password\",\n        id: \"password-check\",\n        name: \"password-check\",\n        placeholder: \"confirm password\",\n        required: true,\n        onChange: e => setConfirmPassword(e.target.value)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 30\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        className: \"secondary-button\",\n        type: \"submit\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: error\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"hr\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"icon-container\",\n      children: [/*#__PURE__*/_jsxDEV(\"img\", {\n        src: playstoreicon,\n        className: \"icons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n        src: appleicon,\n        className: \"icons\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 9\n  }, this);\n};\n_s(AuthModal, \"PNyz+4ZYyuMnZy8q0VNW8kswa6E=\", false, function () {\n  return [useCookies, useNavigate];\n});\n_c = AuthModal;\nexport default AuthModal;\nvar _c;\n$RefreshReg$(_c, \"AuthModal\");","map":{"version":3,"names":["useState","axios","useNavigate","useCookies","playstoreicon","appleicon","jsxDEV","_jsxDEV","AuthModal","setShowModal","isSignUp","_s","email","setEmail","password","setPassword","confirmPassword","setConfirmPassword","error","setError","cookies","setCookie","removeCookie","navigate","handleClick","handleSubmit","e","preventDefault","length","test","response","post","data","token","userId","success","status","window","location","reload","console","log","className","children","onClick","fileName","_jsxFileName","lineNumber","columnNumber","onSubmit","type","id","name","placeholder","required","onChange","target","value","src","_c","$RefreshReg$"],"sources":["C:/Users/rohit/OneDrive/Desktop/Sparkmate/client/src/components/AuthModal.js"],"sourcesContent":["import { useState } from 'react'\r\nimport axios from 'axios'\r\nimport { useNavigate } from 'react-router-dom'\r\nimport { useCookies } from 'react-cookie'\r\nimport playstoreicon from '../images/playstore-icon.png';\r\nimport appleicon from '../images/apple-icon.png'\r\n\r\n\r\nconst AuthModal = ({ setShowModal,  isSignUp }) => {\r\n    const [email, setEmail] = useState(null)\r\n    const [password, setPassword] = useState(null)\r\n    const [confirmPassword, setConfirmPassword] = useState(null)\r\n    const [error, setError] = useState(null)\r\n    const [ cookies, setCookie, removeCookie] = useCookies(null)\r\n\r\n    let navigate = useNavigate()\r\n\r\n    const handleClick = () => {\r\n        setShowModal(false)\r\n    }\r\n\r\n    const handleSubmit = async (e) => {\r\n        e.preventDefault()\r\n\r\n        try {\r\n            if (isSignUp && (password !== confirmPassword)) {\r\n                setError('Passwords need to match!')\r\n                return\r\n            }\r\n            if (isSignUp && password.length < 8) {\r\n                setError(\"Invalid password. Password must contain at least 8 characters, including one letter, one number, and one special character.\");\r\n                return;\r\n              }\r\n          \r\n              if (!/[a-zA-Z]/.test(password) || !/\\d/.test(password) || !/[!@#$%^&*()_+]/.test(password)) {\r\n                setError(\"Invalid password. Password must contain at least 8 characters, including one letter, one number, and one special character.\");\r\n                return;\r\n              }\r\n\r\n            const response = await axios.post(`http://localhost:8000/${isSignUp ? 'signup' : 'login'}`, { email, password })\r\n\r\n            \r\n          \r\n\r\n            setCookie('AuthToken', response.data.token)\r\n            setCookie('UserId', response.data.userId)\r\n\r\n            const success = response.status === 201\r\n            if (success && isSignUp) navigate ('/onboarding')\r\n            if (success && !isSignUp) navigate ('/dashboard')\r\n\r\n            window.location.reload()\r\n\r\n        } catch (error) {\r\n            console.log(error)\r\n        }\r\n\r\n    }\r\n\r\n    return (\r\n        <div className=\"auth-modal\">\r\n            <div className=\"close-icon\" onClick={handleClick}>â“§</div>\r\n\r\n            <h2>{isSignUp ? 'CREATE ACCOUNT': 'LOG IN'}</h2>\r\n            <p>By clicking Log In, you agree to our terms and conditions.</p>\r\n            <form onSubmit={handleSubmit}>\r\n                <input\r\n                    type=\"email\"\r\n                    id=\"email\"\r\n                    name=\"email\"\r\n                    placeholder=\"email\"\r\n                    required={true}\r\n                    onChange={(e) => setEmail(e.target.value)}\r\n                />\r\n                <input\r\n                    type=\"password\"\r\n                    id=\"password\"\r\n                    name=\"password\"\r\n                    placeholder=\"password\"\r\n                    required={true}\r\n                    onChange={(e) => setPassword(e.target.value)}\r\n                />\r\n                {isSignUp && <input\r\n                    type=\"password\"\r\n                    id=\"password-check\"\r\n                    name=\"password-check\"\r\n                    placeholder=\"confirm password\"\r\n                    required={true}\r\n                    onChange={(e) => setConfirmPassword(e.target.value)}\r\n                />}\r\n                <input className=\"secondary-button\" type=\"submit\"/>\r\n                <p>{error}</p>\r\n            </form>\r\n\r\n            <hr/>\r\n            <div className='icon-container'>\r\n                <img src={playstoreicon} className='icons'></img>\r\n                <img src={appleicon} className='icons'></img>\r\n            </div>\r\n\r\n        </div>\r\n    )\r\n}\r\nexport default AuthModal"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}