[{"D:\\test\\project\\spark-mate\\client\\src\\index.js":"1","D:\\test\\project\\spark-mate\\client\\src\\App.js":"2","D:\\test\\project\\spark-mate\\client\\src\\pages\\Dashboard.js":"3","D:\\test\\project\\spark-mate\\client\\src\\pages\\Home.js":"4","D:\\test\\project\\spark-mate\\client\\src\\pages\\OnBoarding.js":"5","D:\\test\\project\\spark-mate\\client\\src\\components\\Nav.js":"6","D:\\test\\project\\spark-mate\\client\\src\\components\\ImageUpload.js":"7","D:\\test\\project\\spark-mate\\client\\src\\components\\AuthModal.js":"8","D:\\test\\project\\spark-mate\\client\\src\\components\\MatchContainer.js":"9","D:\\test\\project\\spark-mate\\client\\src\\components\\ChatContainer.js":"10","D:\\test\\project\\spark-mate\\client\\src\\components\\ChatHeader.js":"11","D:\\test\\project\\spark-mate\\client\\src\\components\\MatchesDisplay.js":"12","D:\\test\\project\\spark-mate\\client\\src\\components\\ChatDisplay.js":"13","D:\\test\\project\\spark-mate\\client\\src\\components\\Chat.js":"14","D:\\test\\project\\spark-mate\\client\\src\\components\\ChatInput.js":"15"},{"size":314,"mtime":1699467948417,"results":"16","hashOfConfig":"17"},{"size":731,"mtime":1699475367414,"results":"18","hashOfConfig":"17"},{"size":14682,"mtime":1699468386393,"results":"19","hashOfConfig":"17"},{"size":1256,"mtime":1699467948417,"results":"20","hashOfConfig":"17"},{"size":8550,"mtime":1699530256159,"results":"21","hashOfConfig":"17"},{"size":775,"mtime":1699467948406,"results":"22","hashOfConfig":"17"},{"size":786,"mtime":1699467948404,"results":"23","hashOfConfig":"17"},{"size":7043,"mtime":1699519367890,"results":"24","hashOfConfig":"17"},{"size":130,"mtime":1699467948404,"results":"25","hashOfConfig":"17"},{"size":6597,"mtime":1699467948404,"results":"26","hashOfConfig":"17"},{"size":737,"mtime":1699467948404,"results":"27","hashOfConfig":"17"},{"size":1411,"mtime":1699467948406,"results":"28","hashOfConfig":"17"},{"size":2302,"mtime":1699467948404,"results":"29","hashOfConfig":"17"},{"size":702,"mtime":1699467948396,"results":"30","hashOfConfig":"17"},{"size":1033,"mtime":1699467948404,"results":"31","hashOfConfig":"17"},{"filePath":"32","messages":"33","suppressedMessages":"34","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"1rqrn7l",{"filePath":"36","messages":"37","suppressedMessages":"38","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"39","usedDeprecatedRules":"35"},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43","usedDeprecatedRules":"35"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"47","usedDeprecatedRules":"35"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","suppressedMessages":"53","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"54","usedDeprecatedRules":"35"},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"61","messages":"62","suppressedMessages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"64","messages":"65","suppressedMessages":"66","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"35"},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"71","usedDeprecatedRules":"35"},{"filePath":"72","messages":"73","suppressedMessages":"74","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"75","usedDeprecatedRules":"35"},{"filePath":"76","messages":"77","suppressedMessages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"79","usedDeprecatedRules":"35"},{"filePath":"80","messages":"81","suppressedMessages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},{"filePath":"83","messages":"84","suppressedMessages":"85","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"35"},"D:\\test\\project\\spark-mate\\client\\src\\index.js",[],[],["86"],"D:\\test\\project\\spark-mate\\client\\src\\App.js",["87","88"],[],"import Home from \"./pages/Home\";\nimport Dashboard from \"./pages/Dashboard\";\nimport OnBoarding from \"./pages/OnBoarding\";\nimport { BrowserRouter, Route, Routes } from \"react-router-dom\";\nimport { useCookies } from \"react-cookie\";\nimport React from \"react\";\n\nconst App = () => {\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n\n  const userID = cookies.userId;\n\n  return (\n    <BrowserRouter>\n      <Routes>\n        <Route path=\"/\" element={<Home />} />\n        <Route path=\"/onboarding\" element={<OnBoarding />} />\n        <Route path=\"/dashboard\" element={<Dashboard />} />\n        {userID && <Route path=\"/dashboard\" element={<Dashboard />} />}\n      </Routes>\n    </BrowserRouter>\n  );\n};\n\nexport default App;\n","D:\\test\\project\\spark-mate\\client\\src\\pages\\Dashboard.js",["89","90","91","92","93","94"],[],"import TinderCard from \"react-tinder-card\";\nimport { useEffect, useState } from \"react\";\nimport ChatContainer from \"../components/ChatContainer\";\nimport { useCookies } from \"react-cookie\";\nimport axios from \"axios\";\nimport React from \"react\";\nimport MatchContainer from \"../components/MatchContainer\";\n\nconst Dashboard = () => {\n  const [user, setUser] = useState(null);\n  const [genderedUsers, setGenderedUsers] = useState([]);\n  const [lastDirection, setLastDirection] = useState();\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n  const [chatListStatus, setChatListStatus] = useState(false);\n  const [matchListStatus, setMatchListStatus] = useState(true);\n\n  //changing the status of the chat and match to be displayed in the left side\n\n  const activeChatList = () => {\n    setChatListStatus(true);\n    setMatchListStatus(false);\n    console.log(\"activated click\");\n  };\n\n  const activeMatchList = () => {\n    setChatListStatus(false);\n    setMatchListStatus(true);\n    console.log(\"activated click\");\n  };\n\n  const userId = cookies.UserId;\n  const authToken = cookies.AuthToken;\n\n  const handleClick = () => {\n    if (authToken) {\n      removeCookie(\"UserId\", cookies.UserId);\n      removeCookie(\"AuthToken\", cookies.AuthToken);\n      window.open(\"/\", \"_self\");\n      return;\n    }\n  };\n  const getUser = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/user\", {\n        params: { userId },\n      });\n      setUser(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n  const getGenderedUsers = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/gendered-users\");\n      console.log(response);\n      setGenderedUsers([response.data]);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  console.log(\"gendred users\", genderedUsers);\n\n  useEffect(() => {\n    getUser();\n  }, []);\n\n  useEffect(() => {\n    if (user) {\n      getGenderedUsers();\n    }\n  }, [user]);\n\n  const updateMatches = async (matchedUserId) => {\n    try {\n      await axios.put(\"http://localhost:8000/addmatch\", {\n        userId,\n        matchedUserId,\n      });\n      getUser();\n    } catch (err) {\n      console.log(err);\n    }\n  };\n\n  const swiped = (direction, swipedUserId) => {\n    if (direction === \"right\") {\n      updateMatches(swipedUserId);\n    }\n    setLastDirection(direction);\n  };\n\n  const outOfFrame = (name) => {\n    console.log(name + \" left the screen!\");\n  };\n\n  const matchedUserIds = user?.matches\n    ?.map(({ user_id }) => user_id)\n    .concat(userId);\n\n  const filteredGenderedUsers = genderedUsers?.filter(\n    (genderedUser) => !matchedUserIds?.includes(genderedUser.user_id)\n  );\n\n  console.log(\"filteredGenderedUsers \", filteredGenderedUsers);\n\n  return (\n    /*\n    <div className=\"card-container\">\n              {filteredGenderedUsers?.map((genderedUser, index) => (\n                <TinderCard\n                  className=\"swipe\"\n                  key={genderedUser.user_id}\n                  onSwipe={(dir) => swiped(dir, genderedUser.user_id)}\n                  onCardLeftScreen={() => outOfFrame(genderedUser.first_name)}\n                >\n                  <div className=\"rightSide\">\n                    <div className=\"left-icon\">\n                      <ion-icon name=\"arrow-back-circle-outline\"></ion-icon>\n                    </div>\n                    <div className=\"person-card\">\n                      <div className=\"the-card\">\n                        <div className=\"the-front\">\n                          <img src={genderedUser.image_url} alt={genderedUser.name} />\n                        </div>\n                        <div className=\"the-back\">\n                          <p>\n                            <strong>Name:</strong> {genderedUser.name}\n                          </p>\n                          <p>\n                            <strong>Age:</strong> {genderedUser.age}\n                          </p>\n                          <p>\n                            <strong>I would describe myself as:</strong>{\" \"}\n                            {genderedUser.description}\n                          </p>\n                          <p className=\"about_me\">\n                            <strong>About me:</strong> {genderedUser.about_me}\n                          </p>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"right-icon\">\n                      <ion-icon name=\"arrow-forward-circle-outline\"></ion-icon>\n                    </div>\n                  </div>\n                </TinderCard>\n              ))}\n              <div className=\"swipe-info\">\n                {lastDirection ? <p>You swiped {lastDirection}</p> : <p />}\n              </div>\n            </div>\n    */\n    <div className=\"user-dashboard\">\n      <div className=\"container\">\n        <div className=\"leftSide\">\n          <div className=\"header\">\n            <div className=\"userimg\">\n              <img src=\"images/user.jpg\" alt=\"\" className=\"cover\" />\n            </div>\n            <ul className=\"nav_icons\">\n              <li onClick={activeMatchList}>\n                <ion-icon name=\"person-add-outline\"></ion-icon>\n              </li>\n              <li onClick={activeChatList}>\n                <ion-icon name=\"chatbox\"></ion-icon>\n              </li>\n              <li onClick={handleClick}>\n                <ion-icon name=\"log-out-outline\"></ion-icon>\n              </li>\n            </ul>\n          </div>\n          <div className=\"search_chat\">\n            {/* <div className=\"search-container\">\n              <input type=\"text\" placeholder=\"Search or start new chat\" />\n              <ion-icon name=\"search-outline\"></ion-icon>\n            </div> */}\n            <div className=\"search-container\">\n              <input type=\"text\" placeholder=\"Search or start new chat\" />\n              <ion-icon name=\"search-outline\"></ion-icon>\n            </div>\n          </div>\n          <div className=\"chatlist\">\n            <div className=\"block active\">\n              <div className=\"imgBox\">\n                <img src=\"images/img1.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Jhon Doe</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>How are you doing?</p>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"block unread\">\n              <div className=\"imgBox\">\n                <img src=\"images/img2.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Andre</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>I love your youtube videos!</p>\n                  <b>1</b>\n                </div>\n              </div>\n            </div>\n\n            <div className=\"block unread\">\n              <div className=\"imgBox\">\n                <img src=\"images/img3.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Olivia</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>I just subscribed to your channel</p>\n                  <b>2</b>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img4.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Parker</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>Hey!</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Jenna</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>I'll get back to you</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Jenna</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>I'll get back to you</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Jenna</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>I'll get back to you</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Jenna</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>I'll get back to you</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img8.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Josh</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>Congratulations</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img9.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Dian</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>Thanks alot</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img5.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Sam</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>Did you finish the project?</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img6.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Junior</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>Nice course</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img10.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Zoey</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>I'll get back to you</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img8.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Josh</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>Congratulations</p>\n                </div>\n              </div>\n            </div>\n            <div className=\"block\">\n              <div className=\"imgBox\">\n                <img src=\"images/img9.jpg\" className=\"cover\" alt=\"\" />\n              </div>\n              <div className=\"details\">\n                <div className=\"listHead\">\n                  <h4>Dian</h4>\n                </div>\n                <div className=\"message_p\">\n                  <p>Thanks alot</p>\n                </div>\n              </div>\n            </div>\n          </div>\n          {chatListStatus && !matchListStatus ? (\n            <ChatContainer user={user} />\n          ) : (\n            <MatchContainer />\n          )}\n        </div>\n        <div className=\"rightSide\">\n          <div className=\"left-icon\">\n            <ion-icon name=\"arrow-back-circle-outline\"></ion-icon>\n          </div>\n          <div className=\"person-card\">\n            <div className=\"the-card\">\n              <div className=\"the-front\">\n                <img src=\"images/img7.png\" alt=\"mia\" />\n              </div>\n              <div className=\"the-back\">\n                <p>\n                  <strong>Name:</strong> Jenna Ortega\n                </p>\n                <p>\n                  <strong>Age:</strong> 23\n                </p>\n                <p>\n                  <strong>I would describe myself as:</strong> She/Her\n                </p>\n                <p className=\"about_me\">\n                  <strong>About me:</strong> Lorem ipsum dolor, sit amet\n                  consectetur adipisicing elit. Architecto eaque cum ullam ipsam\n                  esse voluptates, modi eos praesentium harum itaque dignissimos\n                  rerum distinctio iusto, perferendis, asperiores nostrum\n                  quaerat reprehenderit id perspiciatis. Doloribus recusandae,\n                  ducimus at explicabo perspiciatis quam ipsa autem omnis\n                  laudantium architecto ipsum hic, velit sunt fugit vitae\n                  aliquid!\n                </p>\n              </div>\n            </div>\n          </div>\n          <div className=\"right-icon\">\n            <ion-icon name=\"arrow-forward-circle-outline\"></ion-icon>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\nexport default Dashboard;\n","D:\\test\\project\\spark-mate\\client\\src\\pages\\Home.js",["95"],[],"import Nav from \"../components/Nav\";\nimport AuthModal from \"../components/AuthModal\";\nimport { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst Home = () => {\n  const [showModal, setShowModal] = useState(false);\n  const [isSignUp, setIsSignUp] = useState(true);\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n  const authToken = cookies.AuthToken;\n\n  const handleClick = () => {\n    if (authToken) {\n      removeCookie(\"UserId\", cookies.UserId);\n      removeCookie(\"AuthToken\", cookies.AuthToken);\n      window.location.reload();\n      return;\n    }\n    setShowModal(true);\n    setIsSignUp(true);\n  };\n\n  return (\n    <div className=\"overlay\">\n      <Nav\n        authToken={authToken}\n        minimal={false}\n        setShowModal={setShowModal}\n        showModal={showModal}\n        setIsSignUp={setIsSignUp}\n      />\n      <div className=\"home\">\n        <h1 className=\"primary-title\">Love at First Swipe®</h1>\n        <button className=\"primary-button\" onClick={handleClick}>\n          {authToken ? \"Signout\" : \"Create Account\"}\n        </button>\n\n        {showModal && (\n          <AuthModal setShowModal={setShowModal} isSignUp={isSignUp} />\n        )}\n      </div>\n    </div>\n  );\n};\nexport default Home;\n","D:\\test\\project\\spark-mate\\client\\src\\pages\\OnBoarding.js",["96","97","98"],[],"D:\\test\\project\\spark-mate\\client\\src\\components\\Nav.js",["99","100"],[],"import whiteLogo from \"../images/sparkmate-logo.png\";\nimport colorLogo from \"../images/sparkmate-logo.png\";\n\n\nconst Nav = ({ authToken, minimal, setShowModal, showModal, setIsSignUp }) => {\n  const handleClick = () => {\n    setShowModal(true);\n    setIsSignUp(false);\n  };\n\n  return (\n    <nav>\n      <div className=\"logo-container\">\n        {/* <img\n          className=\"logo\"\n          src={minimal ? colorLogo : whiteLogo}\n          alt=\"logo\"\n        /> */\n        <h3 className=\"logo\">&#9829; Sparkmate</h3>\n        }\n      </div>\n      {!authToken && !minimal && (\n        <button\n          className=\"nav-button\"\n          onClick={handleClick}\n          disabled={showModal}\n        >\n          Log in\n        </button>\n      )}\n    </nav>\n  );\n};\nexport default Nav;","D:\\test\\project\\spark-mate\\client\\src\\components\\ImageUpload.js",[],[],"D:\\test\\project\\spark-mate\\client\\src\\components\\AuthModal.js",["101","102","103","104","105"],[],"D:\\test\\project\\spark-mate\\client\\src\\components\\MatchContainer.js",[],[],"D:\\test\\project\\spark-mate\\client\\src\\components\\ChatContainer.js",["106","107","108","109","110"],[],"import ChatHeader from \"./ChatHeader\";\nimport MatchesDisplay from \"./MatchesDisplay\";\nimport ChatDisplay from \"./ChatDisplay\";\nimport React, { useState } from \"react\";\n\nconst ChatContainer = ({ user }) => {\n  const [clickedUser, setClickedUser] = useState(null);\n\n  return (\n    // <div className=\"chat-container\">\n    //     <ChatHeader user={user}/>\n\n    //     <div>\n    //         <button className=\"option\" onClick={() => setClickedUser(null)}>Matches</button>\n    //         <button className=\"option\" disabled={!clickedUser}>Chat</button>\n    //     </div>\n\n    //     {!clickedUser && <MatchesDisplay matches={user.matches} setClickedUser={setClickedUser}/>}\n\n    //     {clickedUser && <ChatDisplay user={user} clickedUser={clickedUser}/>}\n    // </div>\n\n    <div className=\"chatlist\">\n      <div className=\"block active\">\n        <div className=\"imgBox\">\n          <img src=\"images/img1.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Jhon Doe</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>How are you doing?</p>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"block unread\">\n        <div className=\"imgBox\">\n          <img src=\"images/img2.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Andre</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>I love your youtube videos!</p>\n            <b>1</b>\n          </div>\n        </div>\n      </div>\n\n      <div className=\"block unread\">\n        <div className=\"imgBox\">\n          <img src=\"images/img3.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Olivia</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>I just subscribed to your channel</p>\n            <b>2</b>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img4.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Parker</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>Hey!</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Jenna</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>I'll get back to you</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Jenna</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>I'll get back to you</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Jenna</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>I'll get back to you</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img7.png\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Jenna</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>I'll get back to you</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img8.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Josh</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>Congratulations</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img9.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Dian</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>Thanks alot</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img5.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Sam</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>Did you finish the project?</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img6.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Junior</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>Nice course</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img10.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Zoey</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>I'll get back to you</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img8.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Josh</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>Congratulations</p>\n          </div>\n        </div>\n      </div>\n      <div className=\"block\">\n        <div className=\"imgBox\">\n          <img src=\"images/img9.jpg\" className=\"cover\" alt=\"\" />\n        </div>\n        <div className=\"details\">\n          <div className=\"listHead\">\n            <h4>Dian</h4>\n          </div>\n          <div className=\"message_p\">\n            <p>Thanks alot</p>\n          </div>\n        </div>\n      </div>\n    </div>\n  );\n};\n\nexport default ChatContainer;\n","D:\\test\\project\\spark-mate\\client\\src\\components\\ChatHeader.js",["111","112"],[],"import React, { useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst ChatHeader = ({ user }) => {\n  const [cookies, setCookie, removeCookie] = useCookies([\"user\"]);\n\n  const logout = () => {\n    removeCookie(\"UserId\", cookies.UserId);\n    removeCookie(\"AuthToken\", cookies.AuthToken);\n    window.open(\"/\", \"_self\");\n    return;\n  };\n\n  return (\n    <div className=\"chat-container-header\">\n      <div className=\"profile\">\n        <div className=\"img-container\">\n          <img src={user.url} alt={\"photo of \" + user.first_name} />\n        </div>\n        <h3>{user.first_name}</h3>\n      </div>\n      <i className=\"log-out-icon\" onClick={logout}>\n        ⇦\n      </i>\n    </div>\n  );\n};\n\nexport default ChatHeader;\n","D:\\test\\project\\spark-mate\\client\\src\\components\\MatchesDisplay.js",["113","114","115","116"],[],"import axios from \"axios\";\nimport { useEffect, useState } from \"react\";\nimport { useCookies } from \"react-cookie\";\n\nconst MatchesDisplay = ({ matches, setClickedUser }) => {\n  const [matchedProfiles, setMatchedProfiles] = useState(null);\n  const [cookies, setCookie, removeCookie] = useCookies(null);\n\n  const matchedUserIds = matches?.map(({ user_id }) => user_id);\n  const userId = cookies.UserId;\n\n  const getMatches = async () => {\n    try {\n      const response = await axios.get(\"http://localhost:8000/users\", {\n        params: { userIds: JSON.stringify(matchedUserIds) },\n      });\n      setMatchedProfiles(response.data);\n    } catch (error) {\n      console.log(error);\n    }\n  };\n\n  useEffect(() => {\n    getMatches();\n  }, [matches]);\n\n  const filteredMatchedProfiles = matchedProfiles?.filter(\n    (matchedProfile) =>\n      matchedProfile.matches.filter((profile) => profile.user_id == userId)\n        .length > 0\n  );\n\n  return (\n    <div className=\"matches-display\">\n      {filteredMatchedProfiles?.map((match, _index) => (\n        <div\n          key={_index}\n          className=\"match-card\"\n          onClick={() => setClickedUser(match)}\n        >\n          <div className=\"img-container\">\n            <img src={match?.url} alt={match?.first_name + \" profile\"} />\n          </div>\n          <h3>{match?.first_name}</h3>\n        </div>\n      ))}\n    </div>\n  );\n};\n\nexport default MatchesDisplay;","D:\\test\\project\\spark-mate\\client\\src\\components\\ChatDisplay.js",["117"],[],"import Chat from './Chat'\nimport ChatInput from './ChatInput'\nimport axios from 'axios'\nimport {useState, useEffect} from \"react\"\n\n\nconst ChatDisplay = ({ user , clickedUser }) => {\n    const userId = user?.user_id\n    const clickedUserId = clickedUser?.user_id\n    const [usersMessages, setUsersMessages] = useState(null)\n    const [clickedUsersMessages, setClickedUsersMessages] = useState(null)\n\n    const getUsersMessages = async () => {\n     try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: { userId: userId, correspondingUserId: clickedUserId}\n            })\n         setUsersMessages(response.data)\n        } catch (error) {\n         console.log(error)\n     }\n    }\n\n    const getClickedUsersMessages = async () => {\n        try {\n            const response = await axios.get('http://localhost:8000/messages', {\n                params: { userId: clickedUserId , correspondingUserId: userId}\n            })\n            setClickedUsersMessages(response.data)\n        } catch (error) {\n            console.log(error)\n        }\n    }\n\n    useEffect(() => {\n        getUsersMessages()\n        getClickedUsersMessages()\n    }, [])\n\n    const messages = []\n\n    usersMessages?.forEach(message => {\n        const formattedMessage = {}\n        formattedMessage['name'] = user?.first_name\n        formattedMessage['img'] = user?.url\n        formattedMessage['message'] = message.message\n        formattedMessage['timestamp'] = message.timestamp\n        messages.push(formattedMessage)\n    })\n\n    clickedUsersMessages?.forEach(message => {\n        const formattedMessage = {}\n        formattedMessage['name'] = clickedUser?.first_name\n        formattedMessage['img'] = clickedUser?.url\n        formattedMessage['message'] = message.message\n        formattedMessage['timestamp'] = message.timestamp\n        messages.push(formattedMessage)\n    })\n\n    const descendingOrderMessages = messages?.sort((a,b) => a.timestamp.localeCompare(b.timestamp))\n\n    return (\n        <>\n        <Chat descendingOrderMessages={descendingOrderMessages}/>\n     <ChatInput\n         user={user}\n         clickedUser={clickedUser} getUserMessages={getUsersMessages} getClickedUsersMessages={getClickedUsersMessages}/>\n        </>\n    )\n}\n\nexport default ChatDisplay","D:\\test\\project\\spark-mate\\client\\src\\components\\Chat.js",[],[],"D:\\test\\project\\spark-mate\\client\\src\\components\\ChatInput.js",[],[],{"ruleId":"118","replacedBy":"119"},{"ruleId":"120","severity":1,"message":"121","line":9,"column":19,"nodeType":"122","messageId":"123","endLine":9,"endColumn":28},{"ruleId":"120","severity":1,"message":"124","line":9,"column":30,"nodeType":"122","messageId":"123","endLine":9,"endColumn":42},{"ruleId":"120","severity":1,"message":"125","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":18},{"ruleId":"120","severity":1,"message":"126","line":12,"column":10,"nodeType":"122","messageId":"123","endLine":12,"endColumn":23},{"ruleId":"120","severity":1,"message":"121","line":13,"column":19,"nodeType":"122","messageId":"123","endLine":13,"endColumn":28},{"ruleId":"127","severity":1,"message":"128","line":66,"column":6,"nodeType":"129","endLine":66,"endColumn":8,"suggestions":"130"},{"ruleId":"120","severity":1,"message":"131","line":86,"column":9,"nodeType":"122","messageId":"123","endLine":86,"endColumn":15},{"ruleId":"120","severity":1,"message":"132","line":93,"column":9,"nodeType":"122","messageId":"123","endLine":93,"endColumn":19},{"ruleId":"120","severity":1,"message":"121","line":9,"column":19,"nodeType":"122","messageId":"123","endLine":9,"endColumn":28},{"ruleId":"120","severity":1,"message":"133","line":6,"column":8,"nodeType":"122","messageId":"123","endLine":6,"endColumn":19},{"ruleId":"127","severity":1,"message":"134","line":28,"column":6,"nodeType":"129","endLine":28,"endColumn":8,"suggestions":"135"},{"ruleId":"127","severity":1,"message":"136","line":56,"column":6,"nodeType":"129","endLine":56,"endColumn":8,"suggestions":"137"},{"ruleId":"120","severity":1,"message":"138","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":17},{"ruleId":"120","severity":1,"message":"139","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":17},{"ruleId":"120","severity":1,"message":"124","line":15,"column":30,"nodeType":"122","messageId":"123","endLine":15,"endColumn":42},{"ruleId":"120","severity":1,"message":"140","line":18,"column":10,"nodeType":"122","messageId":"123","endLine":18,"endColumn":22},{"ruleId":"120","severity":1,"message":"141","line":18,"column":24,"nodeType":"122","messageId":"123","endLine":18,"endColumn":39},{"ruleId":"142","severity":1,"message":"143","line":234,"column":9,"nodeType":"144","endLine":234,"endColumn":52},{"ruleId":"142","severity":1,"message":"143","line":235,"column":9,"nodeType":"144","endLine":235,"endColumn":48},{"ruleId":"120","severity":1,"message":"145","line":1,"column":8,"nodeType":"122","messageId":"123","endLine":1,"endColumn":18},{"ruleId":"120","severity":1,"message":"146","line":2,"column":8,"nodeType":"122","messageId":"123","endLine":2,"endColumn":22},{"ruleId":"120","severity":1,"message":"147","line":3,"column":8,"nodeType":"122","messageId":"123","endLine":3,"endColumn":19},{"ruleId":"120","severity":1,"message":"148","line":7,"column":10,"nodeType":"122","messageId":"123","endLine":7,"endColumn":21},{"ruleId":"120","severity":1,"message":"149","line":7,"column":23,"nodeType":"122","messageId":"123","endLine":7,"endColumn":37},{"ruleId":"120","severity":1,"message":"150","line":1,"column":17,"nodeType":"122","messageId":"123","endLine":1,"endColumn":25},{"ruleId":"120","severity":1,"message":"121","line":5,"column":19,"nodeType":"122","messageId":"123","endLine":5,"endColumn":28},{"ruleId":"120","severity":1,"message":"121","line":7,"column":19,"nodeType":"122","messageId":"123","endLine":7,"endColumn":28},{"ruleId":"120","severity":1,"message":"124","line":7,"column":30,"nodeType":"122","messageId":"123","endLine":7,"endColumn":42},{"ruleId":"127","severity":1,"message":"151","line":25,"column":6,"nodeType":"129","endLine":25,"endColumn":15,"suggestions":"152"},{"ruleId":"153","severity":1,"message":"154","line":29,"column":66,"nodeType":"155","messageId":"156","endLine":29,"endColumn":68},{"ruleId":"127","severity":1,"message":"157","line":38,"column":8,"nodeType":"129","endLine":38,"endColumn":10,"suggestions":"158"},"no-new-object",["159"],"no-unused-vars","'setCookie' is assigned a value but never used.","Identifier","unusedVar","'removeCookie' is assigned a value but never used.","'TinderCard' is defined but never used.","'lastDirection' is assigned a value but never used.","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getUser'. Either include it or remove the dependency array.","ArrayExpression",["160"],"'swiped' is assigned a value but never used.","'outOfFrame' is assigned a value but never used.","'ImageUpload' is defined but never used.","React Hook useEffect has missing dependencies: 'cookies.UserId' and 'navigate'. Either include them or remove the dependency array.",["161"],"React Hook useEffect has a missing dependency: 'cookies.UserId'. Either include it or remove the dependency array.",["162"],"'whiteLogo' is defined but never used.","'colorLogo' is defined but never used.","'otpGenerated' is assigned a value but never used.","'setOtpGenerated' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'ChatHeader' is defined but never used.","'MatchesDisplay' is defined but never used.","'ChatDisplay' is defined but never used.","'clickedUser' is assigned a value but never used.","'setClickedUser' is assigned a value but never used.","'useState' is defined but never used.","React Hook useEffect has a missing dependency: 'getMatches'. Either include it or remove the dependency array.",["163"],"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","React Hook useEffect has missing dependencies: 'getClickedUsersMessages' and 'getUsersMessages'. Either include them or remove the dependency array.",["164"],"no-object-constructor",{"desc":"165","fix":"166"},{"desc":"167","fix":"168"},{"desc":"169","fix":"170"},{"desc":"171","fix":"172"},{"desc":"173","fix":"174"},"Update the dependencies array to be: [getUser]",{"range":"175","text":"176"},"Update the dependencies array to be: [cookies.UserId, navigate]",{"range":"177","text":"178"},"Update the dependencies array to be: [cookies.UserId]",{"range":"179","text":"180"},"Update the dependencies array to be: [getMatches, matches]",{"range":"181","text":"182"},"Update the dependencies array to be: [getClickedUsersMessages, getUsersMessages]",{"range":"183","text":"184"},[1900,1902],"[getUser]",[776,778],"[cookies.UserId, navigate]",[1387,1389],"[cookies.UserId]",[733,742],"[getMatches, matches]",[1190,1192],"[getClickedUsersMessages, getUsersMessages]"]